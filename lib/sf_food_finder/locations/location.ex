defmodule SFFoodFinder.Locations.Location do
  defstruct [
    :location_id,
    :applicant,
    :facility_type,
    :cnn,
    :location_description,
    :address,
    :blocklot,
    :block,
    :lot,
    :permit,
    :status,
    :food_items,
    :x,
    :y,
    :latitude,
    :longitude,
    :schedule,
    :dayshours,
    :noisent,
    :approved,
    :received,
    :prior_permit,
    :expiration_date,
    :location,
    :fire_prevention_districts,
    :police_districts,
    :supervisor_districts,
    :zip_codes,
    :neighborhoods_old
  ]

  def new(data) do
    %__MODULE__{
      location_id: Map.fetch!(data, "locationid"),
      applicant: Map.fetch!(data, "Applicant"),
      facility_type: Map.fetch!(data, "FacilityType"),
      cnn: Map.fetch!(data, "cnn"),
      location_description: Map.fetch!(data, "LocationDescription"),
      address: Map.fetch!(data, "Address"),
      blocklot: Map.fetch!(data, "blocklot"),
      block: Map.fetch!(data, "block"),
      lot: Map.fetch!(data, "lot"),
      permit: Map.fetch!(data, "permit"),
      status: Map.fetch!(data, "Status"),
      food_items: Map.fetch!(data, "FoodItems"),
      x: Map.fetch!(data, "X"),
      y: Map.fetch!(data, "Y"),
      latitude: Map.fetch!(data, "Latitude"),
      longitude: Map.fetch!(data, "Longitude"),
      schedule: Map.fetch!(data, "Schedule"),
      dayshours: Map.fetch!(data, "dayshours"),
      noisent: Map.fetch!(data, "NOISent"),
      approved: Map.fetch!(data, "Approved"),
      received: Map.fetch!(data, "Received"),
      prior_permit: Map.fetch!(data, "PriorPermit"),
      expiration_date: Map.fetch!(data, "ExpirationDate"),
      location: Map.fetch!(data, "Location"),
      fire_prevention_districts: Map.fetch!(data, "Fire Prevention Districts"),
      police_districts: Map.fetch!(data, "Police Districts"),
      supervisor_districts: Map.fetch!(data, "Supervisor Districts"),
      zip_codes: Map.fetch!(data, "Zip Codes"),
      neighborhoods_old: Map.fetch!(data, "Neighborhoods (old)")
    }
  end
end
